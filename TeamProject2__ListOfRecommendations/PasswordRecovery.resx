<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>