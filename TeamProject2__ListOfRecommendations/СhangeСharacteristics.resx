<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>